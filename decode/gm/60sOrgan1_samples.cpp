#include "60sOrgan1_samples.h"

static const PROGMEM uint32_t sample_0_60sOrgan1_60ORG67[128] = {
0x12010000,0xf5e5091c,0x0204fd67,0xef61fa39,0xf0faf46b,0xefadef54,0xe58de824,0xe817e448,
0xddd3dd36,0xd6d7dcf2,0xd3b1d4be,0xd05dd3aa,0xd8f3d6e2,0xdda0d411,0x097ff815,0xf0c802f1,
0x0e6eff71,0xff3001a2,0x12230a79,0x1ea617f1,0x22632d78,0x32c61e8f,0x14492d0c,0x1eb311fd,
0x351f2239,0x2c804db2,0xf640f98d,0x1d110871,0x4aa431ac,0x2fb943a0,0x44f036cd,0x1bac3390,
0x2d32249c,0x24d72163,0x10f425db,0x1ac50529,0xfb311e1a,0xf0ccec65,0xe883e9ad,0xda90f41f,
0x83d99e13,0x9a6a8992,0xd15fb3dc,0xce8cdc27,0xec4ed616,0xd36de69f,0xfca8e1fb,0x059efe3a,
0x0e7a1381,0x29b00c0e,0x291940c9,0x2bc11bb5,0x3953345d,0x43ba4c3e,0xf5a41024,0x134b0139,
0x3d96266f,0x3c024ae1,0x45a3384a,0x1bb83ad8,0x2e5319d4,0x1ee2294c,0x13fc2016,0x12d70548,
0x05ad24f0,0xe888e46e,0xe8ebedf8,0xe5b6ef36,0x859caf13,0x934587af,0xbb14a358,0xd315d47a,
0xe57fd296,0xd16ae758,0xf48cd311,0xfd360176,0x0b4e0718,0x1d46099d,0x31763eaf,0x1d32133c,
0x381b32ca,0x473842a5,0xf7ec206f,0x0ce6fccd,0x296818d5,0x42df417a,0x41753976,0x1f8e3dea,
0x279910fa,0x1e0030f3,0x138a173a,0x0c9f0919,0x130e234e,0xdd4de4b1,0xeceaee02,0xe81bea3a,
0x8da6c0f4,0x90c686c3,0xaa12995a,0xd53ac7fe,0xdfd9d311,0xd1ffe58c,0xeb7ecbe7,0xfb720222,
0x068bfe84,0x188a0910,0x35513925,0x15cd137a,0x38c92f6b,0x45233f71,0xfbcf2638,0x0bd0fbd6,
0x23bf15c4,0x43db3cb7,0x40bd3b1c,0x20fe3de4,0x25fd10a2,0x1ecb316f,0x131f165f,0x0ca00967,
0x136022fa,0xdd4de4ca,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_1_60sOrgan1_60ORG67[128] = {
0x12010000,0xf5e5091c,0x0204fd67,0xef61fa39,0xf0faf46b,0xefadef54,0xe58de824,0xe817e448,
0xddd3dd36,0xd6d7dcf2,0xd3b1d4be,0xd05dd3aa,0xd8f3d6e2,0xdda0d411,0x097ff815,0xf0c802f1,
0x0e6eff71,0xff3001a2,0x12230a79,0x1ea617f1,0x22632d78,0x32c61e8f,0x14492d0c,0x1eb311fd,
0x351f2239,0x2c804db2,0xf640f98d,0x1d110871,0x4aa431ac,0x2fb943a0,0x44f036cd,0x1bac3390,
0x2d32249c,0x24d72163,0x10f425db,0x1ac50529,0xfb311e1a,0xf0ccec65,0xe883e9ad,0xda90f41f,
0x83d99e13,0x9a6a8992,0xd15fb3dc,0xce8cdc27,0xec4ed616,0xd36de69f,0xfca8e1fb,0x059efe3a,
0x0e7a1381,0x29b00c0e,0x291940c9,0x2bc11bb5,0x3953345d,0x43ba4c3e,0xf5a41024,0x134b0139,
0x3d96266f,0x3c024ae1,0x45a3384a,0x1bb83ad8,0x2e5319d4,0x1ee2294c,0x13fc2016,0x12d70548,
0x05ad24f0,0xe888e46e,0xe8ebedf8,0xe5b6ef36,0x859caf13,0x934587af,0xbb14a358,0xd315d47a,
0xe57fd296,0xd16ae758,0xf48cd311,0xfd360176,0x0b4e0718,0x1d46099d,0x31763eaf,0x1d32133c,
0x381b32ca,0x473842a5,0xf7ec206f,0x0ce6fccd,0x296818d5,0x42df417a,0x41753976,0x1f8e3dea,
0x279910fa,0x1e0030f3,0x138a173a,0x0c9f0919,0x130e234e,0xdd4de4b1,0xeceaee02,0xe81bea3a,
0x8da6c0f4,0x90c686c3,0xaa12995a,0xd53ac7fe,0xdfd9d311,0xd1ffe58c,0xeb7ecbe7,0xfb720222,
0x068bfe84,0x188a0910,0x35513925,0x15cd137a,0x38c92f6b,0x45233f71,0xfbcf2638,0x0bd0fbd6,
0x23bf15c4,0x43db3cb7,0x40bd3b1c,0x20fe3de4,0x25fd10a2,0x1ecb316f,0x131f165f,0x0ca00967,
0x136022fa,0xdd4de4ca,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_2_60sOrgan1_60ORG91[128] = {
0xd3b80000,0x3042eff1,0xec9705e1,0xe751fa7c,0xf646f140,0xf7c3f7fd,0xf660f735,0xf6d3f123,
0xf747f795,0xf803f7b8,0xf8a6f867,0xf9e3f925,0xe54ff128,0x1d89e619,0xd4bf2c89,0x1c5fe224,
0x03c70ff3,0x01fe02a6,0x032a03ea,0x03cb04a4,0x03ff05b4,0xdfd905bf,0x0827e5d0,0x143f08fc,
0x20c417b3,0x097201c3,0xea2f0905,0x37ded678,0xc39937f3,0x1f09da94,0xfb260f71,0xe6baf929,
0x14e40741,0xdf6e0264,0x2d98bf2d,0xc3a93bfd,0x40a1e573,0x04582959,0xf874fe77,0x20f001fa,
0xe9493326,0x1a64a9bd,0xbf9f3f7f,0x2809d650,0xf4c20c44,0xf9780432,0x1205f897,0xe0f72e02,
0xeea683d9,0xb86822f7,0x0000d650,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_3_60sOrgan1_60ORG96[128] = {
0xea960000,0xfb53f937,0x10000205,0x06731147,0x03db02d7,0x053f0405,0x055b04a6,0x05ed04b3,
0x05130410,0x04cc0394,0x04030282,0x036301c4,0x2d260360,0x02ea27df,0xf019f13d,0x0b080829,
0xda56ee6e,0x1b8ffc25,0xdd9ffef4,0xd797e263,0xd131d37f,0xf355e455,0x0477fd4c,0xe9fd095b,
0xe5a2da07,0xf4fbfa0f,0xe628e1ff,0x3c8b03a6,0xe4f82f45,0xcc82cd5d,0x2c100d4b,0xd2fbe337,
0x3b6cfd64,0xf88e2fc4,0xdff2d5c8,0x2c3f1977,0xb4bbe33c,0x7c27f4fd,0xe0ef5134,0xd312c301,
0x2a4515fc,0xaf18e021,0x7646ef6e,0xdac15007,0xc82abbe3,0x2e54182d,0xaebadf4b,0x75d5eec2,
0xdac1503d,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_4_60sOrgan1_60ORG96[128] = {
0xea960000,0xfb53f937,0x10000205,0x06731147,0x03db02d7,0x053f0405,0x055b04a6,0x05ed04b3,
0x05130410,0x04cc0394,0x04030282,0x036301c4,0x2d260360,0x02ea27df,0xf019f13d,0x0b080829,
0xda56ee6e,0x1b8ffc25,0xdd9ffef4,0xd797e263,0xd131d37f,0xf355e455,0x0477fd4c,0xe9fd095b,
0xe5a2da07,0xf4fbfa0f,0xe628e1ff,0x3c8b03a6,0xe4f82f45,0xcc82cd5d,0x2c100d4b,0xd2fbe337,
0x3b6cfd64,0xf88e2fc4,0xdff2d5c8,0x2c3f1977,0xb4bbe33c,0x7c27f4fd,0xe0ef5134,0xd312c301,
0x2a4515fc,0xaf18e021,0x7646ef6e,0xdac15007,0xc82abbe3,0x2e54182d,0xaebadf4b,0x75d5eec2,
0xdac1503d,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static const PROGMEM AudioSynthWavetable::sample_data 60sOrgan1_samples[5] = {
	{
		(int16_t*)sample_0_60sOrgan1_60ORG67, // sample
		true, // LOOP
		8, // LENGTH_BITS
		(1 << (32 - 8)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(67) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)244 - 1) << (32 - 8), // MAX_PHASE
		((uint32_t)243 - 1) << (32 - 8), // LOOP_PHASE_END
		(((uint32_t)243 - 1) << (32 - 8)) - (((uint32_t)187 - 1) << (32 - 8)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(20.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(132.97 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.5 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(10) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-10)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0.1) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(-0.1))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_1_60sOrgan1_60ORG67, // sample
		true, // LOOP
		8, // LENGTH_BITS
		(1 << (32 - 8)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(67) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)244 - 1) << (32 - 8), // MAX_PHASE
		((uint32_t)243 - 1) << (32 - 8), // LOOP_PHASE_END
		(((uint32_t)243 - 1) << (32 - 8)) - (((uint32_t)187 - 1) << (32 - 8)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(20.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(132.97 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.5 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(10) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-10)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0.1) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(-0.1))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_2_60sOrgan1_60ORG91, // sample
		true, // LOOP
		7, // LENGTH_BITS
		(1 << (32 - 7)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(91) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)101 - 1) << (32 - 7), // MAX_PHASE
		((uint32_t)100 - 1) << (32 - 7), // LOOP_PHASE_END
		(((uint32_t)100 - 1) << (32 - 7)) - (((uint32_t)86 - 1) << (32 - 7)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(20.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(132.97 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.5 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(10) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-10)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0.1) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(-0.1))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_3_60sOrgan1_60ORG96, // sample
		true, // LOOP
		7, // LENGTH_BITS
		(1 << (32 - 7)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(97) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)98 - 1) << (32 - 7), // MAX_PHASE
		((uint32_t)97 - 1) << (32 - 7), // LOOP_PHASE_END
		(((uint32_t)97 - 1) << (32 - 7)) - (((uint32_t)87 - 1) << (32 - 7)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(20.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(132.97 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.5 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(10) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-10)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0.1) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(-0.1))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_4_60sOrgan1_60ORG96, // sample
		true, // LOOP
		7, // LENGTH_BITS
		(1 << (32 - 7)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(97) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)98 - 1) << (32 - 7), // MAX_PHASE
		((uint32_t)97 - 1) << (32 - 7), // LOOP_PHASE_END
		(((uint32_t)97 - 1) << (32 - 7)) - (((uint32_t)87 - 1) << (32 - 7)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(20.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(0.0)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(132.97 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.5 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(10) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-10)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0.1) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(-0.1))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const PROGMEM uint8_t 60sOrgan1_ranges[] = {55, 84, 93, 96, 127, };

const PROGMEM AudioSynthWavetable::instrument_data 60sOrgan1 = {5, 60sOrgan1_ranges, 60sOrgan1_samples };

