#include "Saw_samples.h"

static const PROGMEM uint32_t sample_0_Saw_SAW__40[384] = {
0xff890000,0xfda9fe98,0xfbc9fcb9,0xf9e9fad9,0xf80af8f9,0xf62af719,0xf44af539,0xf26af35a,
0xf08bf17a,0xeeabef9a,0xeccbedba,0xeaebebdc,0xe90be9fc,0xe72ce81c,0xe54ce63c,0xe36ce45c,
0xe18ce27d,0xdface09d,0xddcddebd,0xdbeddcdd,0xda0ddafd,0xd82dd91e,0xd64ed73e,0xd46ed55e,
0xd28ed37e,0xd0aed19f,0xcececfbf,0xccf0cddf,0xcb10cbff,0xc930ca1f,0xc750c840,0xc570c660,
0xc391c480,0xc1b1c2a0,0xbfd1c0c1,0xbdf1bee1,0xbc12bd01,0xba32bb21,0xb852b941,0xb672b762,
0xb492b582,0xb2b3b3a2,0xb0d3b1c2,0xaef3afe2,0xad13ae03,0xab33ac23,0xa954aa43,0xa774a863,
0xa594a685,0xa3b4a4a5,0xa1d5a2c5,0x9ff5a0e5,0x9e159f05,0x9c359d26,0x9a559b46,0x98769966,
0x96969786,0x94b695a6,0x92d693c7,0x90f691e7,0x8f179007,0x8d378e27,0x8b578c48,0x89778a68,
0x87998888,0x85b986a8,0x7c2784c8,0x7a477b38,0x78677958,0x76897778,0x74a97598,0x72c973b8,
0x70e971d9,0x6f0a6ff9,0x6d2a6e19,0x6b4a6c39,0x696a6a5a,0x678a687a,0x65ab669a,0x63cb64ba,
0x61eb62da,0x600b60fb,0x5e2b5f1b,0x5c4c5d3b,0x5a6c5b5b,0x588c597b,0x56ac579d,0x54cd55bd,
0x52ed53dd,0x510d51fd,0x4f2d501e,0x4d4d4e3e,0x4b6e4c5e,0x498e4a7e,0x47ae489e,0x45ce46bf,
0x43ee44df,0x420f42ff,0x402f411f,0x3e4f3f3f,0x3c6f3d60,0x3a903b80,0x38b039a0,0x36d037c0,
0x34f035e1,0x33103401,0x31323221,0x2f523041,0x2d722e61,0x2b922c82,0x29b22aa2,0x27d328c2,
0x25f326e2,0x24132503,0x22332323,0x20542143,0x1e741f63,0x1c941d83,0x1ab41ba4,0x18d419c4,
0x16f517e4,0x15151604,0x13351424,0x11551246,0x0f751066,0x0d960e86,0x0bb60ca6,0x09d60ac7,
0x07f608e7,0x06170707,0x04370527,0x02570347,0x00770168,0xfe98ff89,0xfcb9fda9,0xfad9fbc9,
0xf8f9f9e9,0xf719f80a,0xf539f62a,0xf35af44a,0xf17af26a,0xef9af08b,0xedbaeeab,0xebdceccb,
0xe9fceaeb,0xe81ce90b,0xe63ce72c,0xe45ce54c,0xe27de36c,0xe09de18c,0xdebddfac,0xdcddddcd,
0xdafddbed,0xd91eda0d,0xd73ed82d,0xd55ed64e,0xd37ed46e,0xd19fd28e,0xcfbfd0ae,0xcddfcece,
0xcbffccf0,0xca1fcb10,0xc840c930,0xc660c750,0xc480c570,0xc2a0c391,0xc0c1c1b1,0xbee1bfd1,
0xbd01bdf1,0xbb21bc12,0xb941ba32,0xb762b852,0xb582b672,0xb3a2b492,0xb1c2b2b3,0xafe2b0d3,
0xae03aef3,0xac23ad13,0xaa43ab33,0xa863a954,0xa685a774,0xa4a5a594,0xa2c5a3b4,0xa0e5a1d5,
0x9f059ff5,0x9d269e15,0x9b469c35,0x99669a55,0x97869876,0x95a69696,0x93c794b6,0x91e792d6,
0x900790f6,0x8e278f17,0x8c488d37,0x8a688b57,0x88888977,0x86a88799,0x84c885b9,0x7b387c27,
0x79587a47,0x77787867,0x75987689,0x73b874a9,0x71d972c9,0x6ff970e9,0x6e196f0a,0x6c396d2a,
0x6a5a6b4a,0x687a696a,0x669a678a,0x64ba65ab,0x62da63cb,0x60fb61eb,0x5f1b600b,0x5d3b5e2b,
0x5b5b5c4c,0x597b5a6c,0x579d588c,0x55bd56ac,0x53dd54cd,0x51fd52ed,0x501e510d,0x4e3e4f2d,
0x4c5e4d4d,0x4a7e4b6e,0x489e498e,0x46bf47ae,0x44df45ce,0x42ff43ee,0x411f420f,0x3f3f402f,
0x3d603e4f,0x3b803c6f,0x39a03a90,0x37c038b0,0x35e136d0,0x340134f0,0x32213310,0x30413132,
0x2e612f52,0x2c822d72,0x2aa22b92,0x28c229b2,0x26e227d3,0x250325f3,0x23232413,0x21432233,
0x1f632054,0x1d831e74,0x1ba41c94,0x19c41ab4,0x17e418d4,0x160416f5,0x14241515,0x12461335,
0x10661155,0x0e860f75,0x0ca60d96,0x0ac70bb6,0x08e709d6,0x070707f6,0x05270617,0x03470437,
0x01680257,0x00000077,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,

};

static const PROGMEM uint32_t sample_1_Saw_SAW__52[256] = {
0xfe1f0000,0xfa5cfc3d,0xf699f87a,0xf2d5f4b7,0xef12f0f4,0xeb4fed31,0xe78be96e,0xe3c9e5aa,
0xe006e1e7,0xdc43de24,0xd87fda62,0xd4bcd69e,0xd0f9d2db,0xcd36cf18,0xc973cb54,0xc5b0c791,
0xc1edc3ce,0xbe29c00b,0xba66bc48,0xb6a3b885,0xb2e0b4c1,0xaf1db0fe,0xab5aad3b,0xa796a977,
0xa3d3a5b5,0xa010a1f2,0x9c4e9e2f,0x988a9a6b,0x94c796a8,0x910492e5,0x8d408f22,0x897d8b5f,
0x85ba879c,0x7a467c27,0x76837864,0x72c074a1,0x6efc70de,0x6b396d1b,0x67766958,0x63b26595,
0x5ff061d1,0x5c2d5e0e,0x586a5a4b,0x54a65689,0x50e352c5,0x4d204f02,0x495d4b3f,0x459a477b,
0x41d743b8,0x3e133ff5,0x3a503c32,0x368d386f,0x32ca34ac,0x2f0730e8,0x2b442d25,0x27812962,
0x23bd259e,0x1ffa21dc,0x1c371e19,0x18751a56,0x14b11692,0x10ee12cf,0x0d2b0f0c,0x09670b49,
0x05a40786,0x01e103c3,0xfe1f0000,0xfa5cfc3d,0xf699f87a,0xf2d5f4b7,0xef12f0f4,0xeb4fed31,
0xe78be96e,0xe3c9e5aa,0xe006e1e7,0xdc43de24,0xd87fda62,0xd4bcd69e,0xd0f9d2db,0xcd36cf18,
0xc973cb54,0xc5b0c791,0xc1edc3ce,0xbe29c00b,0xba66bc48,0xb6a3b885,0xb2e0b4c1,0xaf1db0fe,
0xab5aad3b,0xa796a977,0xa3d3a5b5,0xa010a1f2,0x9c4e9e2f,0x988a9a6b,0x94c796a8,0x910492e5,
0x8d408f22,0x897d8b5f,0x85ba879c,0x7a467c27,0x76837864,0x72c074a1,0x6efc70de,0x6b396d1b,
0x67766958,0x63b26595,0x5ff061d1,0x5c2d5e0e,0x586a5a4b,0x54a65689,0x50e352c5,0x4d204f02,
0x495d4b3f,0x459a477b,0x41d743b8,0x3e133ff5,0x3a503c32,0x368d386f,0x32ca34ac,0x2f0730e8,
0x2b442d25,0x27812962,0x23bd259e,0x1ffa21dc,0x1c371e19,0x18751a56,0x14b11692,0x10ee12cf,
0x0d2b0f0c,0x09670b49,0x05a40786,0x01e103c3,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_2_Saw_SAW__64[128] = {
0xfc3d0000,0xf4b7f87a,0xed31f0f4,0xe5aae96e,0xde24e1e7,0xd69eda62,0xcf18d2db,0xc791cb54,
0xc00bc3ce,0xb885bc48,0xb0feb4c1,0xa977ad3b,0xa1f2a5b5,0x9a6b9e2f,0x92e596a8,0x8b5f8f22,
0x7c27879c,0x74a17864,0x6d1b70de,0x65956958,0x5e0e61d1,0x56895a4b,0x4f0252c5,0x477b4b3f,
0x3ff543b8,0x386f3c32,0x30e834ac,0x29622d25,0x21dc259e,0x1a561e19,0x12cf1692,0x0b490f0c,
0x03c30786,0xfc3d0000,0xf4b7f87a,0xed31f0f4,0xe5aae96e,0xde24e1e7,0xd69eda62,0xcf18d2db,
0xc791cb54,0xc00bc3ce,0xb885bc48,0xb0feb4c1,0xa977ad3b,0xa1f2a5b5,0x9a6b9e2f,0x92e596a8,
0x8b5f8f22,0x7c27879c,0x74a17864,0x6d1b70de,0x65956958,0x5e0e61d1,0x56895a4b,0x4f0252c5,
0x477b4b3f,0x3ff543b8,0x386f3c32,0x30e834ac,0x29622d25,0x21dc259e,0x1a561e19,0x12cf1692,
0x0b490f0c,0x03c30786,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_3_Saw_SAW__76[128] = {
0xfc3d0000,0xed31f4b7,0xde24e5aa,0xcf18d69e,0xc00bc791,0xb0feb885,0xa1f2a977,0x92e59a6b,
0x7c278b5f,0x6d1b74a1,0x5e0e6595,0x4f025689,0x3ff5477b,0x30e8386f,0x21dc2962,0x12cf1a56,
0x03c30b49,0xf4b7fc3d,0xe5aaed31,0xd69ede24,0xc791cf18,0xb885c00b,0xa977b0fe,0x9a6ba1f2,
0x8b5f92e5,0x74a17c27,0x65956d1b,0x56895e0e,0x477b4f02,0x386f3ff5,0x296230e8,0x1a5621dc,
0x0b4912cf,0x000003c3,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_4_Saw_SAW__88[128] = {
0xf8b20000,0xdb7cea17,0xbe46cce1,0xa10fafab,0x7c279274,0x5ef16d8c,0x41ba5055,0x2484331f,
0x074e15e9,0xea17f8b2,0xcce1db7c,0xafabbe46,0x9274a10f,0x6d8c7c27,0x50555ef1,0x331f41ba,
0x15e92484,0x0000074e,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_5_Saw_SAW__A0A[128] = {
0xd173f07c,0x935fb269,0x4d996ca3,0x0f852e8f,0xd173f07c,0x935fb269,0x4d996ca3,0x0f852e8f,
0xd173f07c,0x935fb269,0x4d996ca3,0x0f852e8f,0x0000f07c,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_6_Saw_SAW__B2A[128] = {
0xc1ed0000,0x3e137c27,0xc1ed0000,0x3e137c27,0xc1ed0000,0x3e137c27,0xc1ed0000,0x3e137c27,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static const PROGMEM uint32_t sample_7_Saw_SAW__B9B[128] = {
0xad3cd69e,0x000052c5,0x52c5ad3c,0xad3c0000,0x000052c5,0x52c5ad3c,0xad3c0000,0x000052c5,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,
};

static const PROGMEM AudioSynthWavetable::sample_data Saw_samples[8] = {
	{
		(int16_t*)sample_0_Saw_SAW__40, // sample
		true, // LOOP
		10, // LENGTH_BITS
		(1 << (32 - 10)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(40) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)531 - 1) << (32 - 10), // MAX_PHASE
		((uint32_t)530 - 1) << (32 - 10), // LOOP_PHASE_END
		(((uint32_t)530 - 1) << (32 - 10)) - (((uint32_t)265 - 1) << (32 - 10)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1760.31 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(5.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(900.21 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.7 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(5) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-5)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_1_Saw_SAW__52, // sample
		true, // LOOP
		9, // LENGTH_BITS
		(1 << (32 - 9)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(52) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)265 - 1) << (32 - 9), // MAX_PHASE
		((uint32_t)264 - 1) << (32 - 9), // LOOP_PHASE_END
		(((uint32_t)264 - 1) << (32 - 9)) - (((uint32_t)132 - 1) << (32 - 9)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1760.31 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(5.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(900.21 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.7 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(5) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-5)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_2_Saw_SAW__64, // sample
		true, // LOOP
		8, // LENGTH_BITS
		(1 << (32 - 8)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(64) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)133 - 1) << (32 - 8), // MAX_PHASE
		((uint32_t)132 - 1) << (32 - 8), // LOOP_PHASE_END
		(((uint32_t)132 - 1) << (32 - 8)) - (((uint32_t)66 - 1) << (32 - 8)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1760.31 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(5.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(900.21 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.7 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(5) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-5)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_3_Saw_SAW__76, // sample
		true, // LOOP
		7, // LENGTH_BITS
		(1 << (32 - 7)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(76) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)67 - 1) << (32 - 7), // MAX_PHASE
		((uint32_t)66 - 1) << (32 - 7), // LOOP_PHASE_END
		(((uint32_t)66 - 1) << (32 - 7)) - (((uint32_t)33 - 1) << (32 - 7)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1760.31 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(5.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(900.21 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.7 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(5) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-5)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_4_Saw_SAW__88, // sample
		true, // LOOP
		6, // LENGTH_BITS
		(1 << (32 - 6)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(88) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)35 - 1) << (32 - 6), // MAX_PHASE
		((uint32_t)34 - 1) << (32 - 6), // LOOP_PHASE_END
		(((uint32_t)34 - 1) << (32 - 6)) - (((uint32_t)17 - 1) << (32 - 6)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1760.31 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(5.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(900.21 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.7 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(5) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-5)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_5_Saw_SAW__A0A, // sample
		true, // LOOP
		5, // LENGTH_BITS
		(1 << (32 - 5)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(101) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)25 - 1) << (32 - 5), // MAX_PHASE
		((uint32_t)24 - 1) << (32 - 5), // LOOP_PHASE_END
		(((uint32_t)24 - 1) << (32 - 5)) - (((uint32_t)8 - 1) << (32 - 5)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1760.31 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(5.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(900.21 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.7 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(5) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-5)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_6_Saw_SAW__B2A, // sample
		true, // LOOP
		5, // LENGTH_BITS
		(1 << (32 - 5)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(113) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)17 - 1) << (32 - 5), // MAX_PHASE
		((uint32_t)16 - 1) << (32 - 5), // LOOP_PHASE_END
		(((uint32_t)16 - 1) << (32 - 5)) - (((uint32_t)4 - 1) << (32 - 5)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1760.31 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(5.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(900.21 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.7 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(5) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-5)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
	{
		(int16_t*)sample_7_Saw_SAW__B9B, // sample
		true, // LOOP
		5, // LENGTH_BITS
		(1 << (32 - 5)) * WAVETABLE_CENTS_SHIFT(0) * 22050.0 / WAVETABLE_NOTE_TO_FREQUENCY(118) / AUDIO_SAMPLE_RATE_EXACT + 0.5, // PER_HERTZ_PHASE_INCREMENT
		((uint32_t)16 - 1) << (32 - 5), // MAX_PHASE
		((uint32_t)15 - 1) << (32 - 5), // LOOP_PHASE_END
		(((uint32_t)15 - 1) << (32 - 5)) - (((uint32_t)3 - 1) << (32 - 5)), // LOOP_PHASE_LENGTH
		uint16_t(UINT16_MAX * WAVETABLE_DECIBEL_SHIFT(0)), // INITIAL_ATTENUATION_SCALAR
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DELAY_COUNT
		uint32_t(1.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // ATTACK_COUNT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // HOLD_COUNT
		uint32_t(1760.31 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // DECAY_COUNT
		uint32_t(5.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / AudioSynthWavetable::ENVELOPE_PERIOD + 0.5), // RELEASE_COUNT
		int32_t((1.0 - WAVETABLE_DECIBEL_SHIFT(-0.3)) * AudioSynthWavetable::UNITY_GAIN), // SUSTAIN_MULT
		uint32_t(0.00 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // VIBRATO_DELAY
		uint32_t(8.2 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // VIBRATO_INCREMENT
		(WAVETABLE_CENTS_SHIFT(0) - 1.0) * 4, // VIBRATO_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(0)) * 4, // VIBRATO_COEFFICIENT_SECONDARY
		uint32_t(900.21 * AudioSynthWavetable::SAMPLES_PER_MSEC / (2 * AudioSynthWavetable::LFO_PERIOD)), // MODULATION_DELAY
		uint32_t(5.7 * AudioSynthWavetable::LFO_PERIOD * (UINT32_MAX / AUDIO_SAMPLE_RATE_EXACT)), // MODULATION_INCREMENT
		(WAVETABLE_CENTS_SHIFT(5) - 1.0) * 4, // MODULATION_PITCH_COEFFICIENT_INITIAL
		(1.0 - WAVETABLE_CENTS_SHIFT(-5)) * 4, // MODULATION_PITCH_COEFFICIENT_SECOND
		int32_t(UINT16_MAX * (WAVETABLE_DECIBEL_SHIFT(0) - 1.0)) * 4, // MODULATION_AMPLITUDE_INITIAL_GAIN
		int32_t(UINT16_MAX * (1.0 - WAVETABLE_DECIBEL_SHIFT(0))) * 4, // MODULATION_AMPLITUDE_FINAL_GAIN
	},
};

static const PROGMEM uint8_t Saw_ranges[] = {40, 51, 63, 76, 88, 100, 112, 127, };

const PROGMEM AudioSynthWavetable::instrument_data Saw = {8, Saw_ranges, Saw_samples };

